{"version":3,"file":"static/js/408.79f4df10.chunk.js","mappings":"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","sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","components/hooks/useFileHandler.js","components/ImageLoader/ImageLoader.jsx","pages/Files/EditFiles/Base64.js","pages/Files/EditFiles/EditFilesForm.jsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","/* eslint-disable no-alert */\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst useFileHandler = (initState) => {\n\n  const [imageFile, setImageFile] = useState(initState);\n  const [isFileLoading, setFileLoading] = useState(false);\n\n  const removeImage = ({ id, name }) => {\n    const items = imageFile[name].filter((item) => item.id !== id);\n\n    setImageFile({\n      ...imageFile,\n      [name]: items,\n    });\n  };\n\n  const onFileChange = (event, { name, type }) => {\n    const val = event.target.value;\n    const img = event.target.files[0];\n    const size = img.size / 1024 / 1024;\n    const regex = /(\\.jpg|\\.jpeg|\\.png)$/i;\n\n    setFileLoading(true);\n    if (!regex.exec(val)) {\n      alert('File type must be JPEG or PNG', 'error');\n      setFileLoading(false);\n    } else if (size > 0.5) {\n      alert('File size exceeded 500kb, consider optimizing your image', 'error');\n      setFileLoading(false);\n    } else if (type === 'multiple') {\n      Array.from(event.target.files).forEach((file) => {\n        const reader = new FileReader();\n        reader.addEventListener('load', (e) => {\n          setImageFile((oldFiles) => ({\n            ...oldFiles,\n            [name]: [...oldFiles[name], { file, url: e.target.result, id: uuidv4() }],\n          }));\n        });\n        reader.readAsDataURL(file);\n      });\n\n      setFileLoading(false);\n    } else { // type is single\n      const reader = new FileReader();\n\n      reader.addEventListener('load', (e) => {\n        setImageFile({\n          ...imageFile,\n          [name]: { file: img, url: e.target.result },\n        });\n        setFileLoading(false);\n      });\n      reader.readAsDataURL(img);\n    }\n  };\n  // const onFileChange = (event, { name, type }) => {\n  //   const val = event.target.value;\n  //   const img = event.target.files[0];\n  //   const size = img.size / 1024 / 1024;\n  //   const regex = /(\\.jpg|\\.jpeg|\\.png)$/i;\n\n  //   setFileLoading(true);\n  //   if (!regex.exec(val)) {\n  //     alert('File type must be JPEG or PNG', 'error');\n  //     setFileLoading(false);\n  //   } else if (size > 0.5) {\n  //     alert('File size exceeded 500kb, consider optimizing your image', 'error');\n  //     setFileLoading(false);\n  //   } else if (type === 'multiple') {\n  //     Array.from(event.target.files).forEach((file) => {\n  //       const reader = new FileReader();\n  //       reader.addEventListener('load', (e) => {\n  //         setImageFile((oldFiles) => ({\n  //           ...oldFiles,\n  //           [name]: [...oldFiles[name], { file, url: e.target.result, id: uuidv4() }]\n  //         }));\n  //       });\n  //       reader.readAsDataURL(file);\n  //     });\n\n  //     setFileLoading(false);\n  //   } else { // type is single\n  //     const reader = new FileReader();\n\n  //     reader.addEventListener('load', (e) => {\n  //       setImageFile({\n  //         ...imageFile,\n  //         [name]: { file: img, url: e.target.result }\n  //       });\n  //       setFileLoading(false);\n  //     });\n  //     reader.readAsDataURL(img);\n  //   }\n  // };\n\n  return {\n    imageFile,\n    setImageFile,\n    isFileLoading,\n    onFileChange,\n    removeImage,\n    // imageFile,\n    // setImageFile,\n    // isFileLoading,\n    // onFileChange,\n    // removeImage\n  };\n};\n\nexport default useFileHandler;\n","import { LoadingOutlined } from '@ant-design/icons';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../../../src/App.css';\n\nconst ImageLoader = ({ src, alt }) => {\n  const loadedImages = {};\n  const [loaded, setLoaded] = useState(loadedImages[src]);\n\n  const onLoad = () => {\n    loadedImages[src] = true;\n    setLoaded(true);\n  };\n\n  return (\n    <>\n      {!loaded && (\n        <LoadingOutlined style={{\n          position: 'absolute', top: 0, bottom: 0, right: 0, left: 0, margin: 'auto',\n        }}\n        />\n      )}\n      <img\n        alt={alt || ''}\n        className='collection-images'\n        onLoad={onLoad}\n        src={src}\n      />\n    </>\n  );\n};\n\nImageLoader.propTypes = {\n  src: PropTypes.string.isRequired, // Make sure 'src' is a required string\n  alt: PropTypes.string, // 'alt' is an optional string\n};\n\nImageLoader.defaultProps = {\n  className: 'image-loader',\n};\n\nexport default ImageLoader;\n","\nexport default function convertToBase64(file1, file2) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file1, file2);\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport axios from 'axios';\nimport useFileHandler from '../../../components/hooks/useFileHandler';\nimport ImageLoader from '../../../components/ImageLoader/ImageLoader';\nimport convertToBase64 from './Base64';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './EditFiles.css';\n\nconst EditFilesForm = ({ product }) => {\n  const [user, setUser] = useState(product);\n\n  const { imageFile, isFileLoading, onFileChange, removeImage } =\n    useFileHandler({ imageCollection: user?.imageCollection || [] });\n\n  const [fname, setFName] = useState('');\n  const name = fname || user?.fname;\n\n  const setData1 = (e) => {\n    const { value } = e.target;\n    setFName(value);\n  };\n\n  const tree = {\n    id: user?._id,\n    name: name,\n    image: user?.image,\n    image2: user?.image2,\n    imgpath: user?.imgpath,\n    date: user?.date,\n    imageCollection: imageFile,\n  };\n\n  const [file, setFile] = useState();\n\n  const editUser = async (e) => {\n    e.preventDefault();\n\n    var formData = new FormData();\n    formData.append('photo', file);\n    formData.append('id', user._id);\n    formData.append('name', name);\n    formData.append('image', user.image);\n    formData.append('image2', user.image2);\n    formData.append('imgpath', user.imgpath);\n    formData.append('date', user.date);\n\n    imageFile?.imageCollection.forEach((collection, index) => {\n      const { id, url } = collection; // Destructure the object properties\n      formData.append(`imageCollection[${index}][id]`, id);\n      formData.append(`imageCollection[${index}][url]`, url);\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        // 'Content-Type': 'multipart/form-data',\n      },\n    };\n\n    console.log('line:300', tree);\n\n    const res = await axios.post('/editfiles', formData, config);\n    \n    if (res.data.status === 401 || !res.data) {\n      console.log('errror');\n    } else {\n      // history(\"/files\")\n      console.log('!success!', res);\n      window.location.href = '/files';\n    }\n  };\n\n  // const img = user?.imgpath;\n  const [postImage1, setPostImage1] = useState({ myFile: '' });\n  // const [file1, setFile1] = useState('');\n  const [image1, setImage1] = useState();\n\n  const setData4 = () => {\n    setUser({\n      _id: user._id,\n      __v: user.__v,\n      imgpath: user.imgpath,\n      image: '',\n      image2: user.image2,\n      date: user.date,\n      fname: user.fname,\n    });\n    setImage1('');\n  };\n\n  const setimgfile1 = async (e) => {\n    // setFile1(e.target.files[0]);\n    const test1 = e.target.files[0];\n    const base64 = await convertToBase64(test1);\n    setPostImage1({ ...postImage1, myFile: base64 });\n    setImage1(URL.createObjectURL(e.target.files[0]));\n\n    setUser({\n      _id: user._id,\n      __v: user.__v,\n      imgpath: user.imgpath,\n      image: base64,\n      image2: user.image2,\n      date: user.date,\n      fname: user.fname,\n    });\n  };\n\n  const [postImage, setPostImage] = useState({ myFile: '' });\n  // const [image, setImage] = useState('');\n\n  const setimgfile = async (e) => {\n    setFile(e.target.files[0]);\n    const test = e.target.files[0];\n    const base64 = await convertToBase64(test);\n    setPostImage({ ...postImage, myFile: base64 });\n    // setImage(URL.createObjectURL(e.target.files[0]));\n  };\n\n  const setData5 = () => {\n    setUser({\n      _id: user._id,\n      __v: user.__v,\n      imgpath: '',\n      image: user.image,\n      image2: user.image2,\n      date: user.date,\n      fname: user.fname,\n    });\n    setImage1('');\n  };\n\n  return (\n    <div>\n      <div style={{ margin: '15px' }} className=\"nav-link\">\n        <Link to=\"/files\">\n          <Button variant=\"primary\">Go Back</Button>\n        </Link>\n      </div>\n\n      <div className=\"container mt-3\">\n        <h3>Edit Files Form</h3>\n        <Form className=\"mt-3\">\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>File Name</Form.Label>\n            <Form.Control\n              defaultValue={user?.fname}\n              onChange={setData1}\n              type=\"text\"\n              name=\"fname\"\n              placeholder=\"\"\n            />\n          </Form.Group>\n          <div className=\"images-copy\">\n            <div className=\"element_1 green\">\n              <Form.Label>Image1</Form.Label>\n              <Form.Control\n                type=\"file\"\n                onChange={setimgfile1}\n                name=\"photo\"\n                placeholder=\"\"\n              />\n\n              <div className=\"image-preview-container\">\n                <Form.Group>\n                  <img src={image1 || user?.image} alt=\"image1\" />\n                  <div>\n                    <Button onClick={setData4}>Delete1</Button>\n                  </div>\n                </Form.Group>\n              </div>\n            </div>\n            <div className=\"element_1 yellow\">\n              <Form.Label>Image2</Form.Label>\n              <Form.Control\n                type=\"file\"\n                onChange={setimgfile}\n                name=\"photo\"\n                placeholder=\"\"\n              />\n\n              <div className=\"image-preview-container\">\n                <Form.Group>\n                  <img\n                    src={postImage.myFile || `/uploads/${user?.imgpath}`}\n                    alt=\"image1\"\n                  />\n                  <div>\n                    <Button onClick={setData5}>Delete2</Button>\n                  </div>\n                </Form.Group>\n              </div>\n            </div>\n          </div>\n        </Form>\n        <div>\n          <div className=\"image-collection-top\">\n            <div className=\"product-form-field\">\n              <span className=\"d-block padding-s\">Image Collection</span>\n              {!isFileLoading && (\n                <label\n                  className=\"red-label\"\n                  htmlFor=\"product-input-file-collection\"\n                >\n                  <input\n                    hidden\n                    id=\"product-input-file-collection\"\n                    multiple\n                    onChange={(e) =>\n                      onFileChange(e, {\n                        name: 'imageCollection',\n                        type: 'multiple',\n                      })\n                    }\n                    type=\"file\"\n                  />\n                  Choose Images1\n                </label>\n              )}\n            </div>\n\n            <div className=\"image-collection\">\n              {imageFile?.imageCollection?.length >= 1 &&\n                imageFile?.imageCollection?.map((image) => (\n                  <div className=\"product-form-collection-image\" key={image.id}>\n                    <ImageLoader alt=\"\" src={image.url} />\n                    <button\n                      className=\"product-form-delete-image\"\n                      onClick={() =>\n                        removeImage({ id: image.id, name: 'imageCollection' })\n                      }\n                      title=\"Delete Image\"\n                      type=\"button\"\n                    >\n                      Delete <i className=\"fa fa-times-circle\" />\n                    </button>\n                  </div>\n                ))}\n            </div>\n          </div>\n          <Button variant=\"primary\" onClick={editUser}>\n            Submit1\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nEditFilesForm.propTypes = {\n  product: PropTypes.shape({\n    _id: PropTypes.string,\n    __v: PropTypes.number,\n    imgpath: PropTypes.string,\n    image: PropTypes.string,\n    image2: PropTypes.string,\n    date: PropTypes.string,\n    fname: PropTypes.string,\n    imageCollection: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        url: PropTypes.string,\n      }),\n    ),\n  }),\n};\n\nexport default EditFilesForm;\n"],"names":["getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","options","buf","native","rnds","random","initState","useState","imageFile","setImageFile","isFileLoading","setFileLoading","onFileChange","event","name","type","val","target","value","img","files","size","exec","alert","Array","from","forEach","file","reader","FileReader","addEventListener","e","oldFiles","url","result","id","uuidv4","readAsDataURL","removeImage","items","filter","item","ImageLoader","src","alt","loadedImages","loaded","setLoaded","LoadingOutlined","style","position","top","bottom","right","left","margin","className","onLoad","defaultProps","convertToBase64","file1","file2","Promise","resolve","reject","fileReader","onload","onerror","error","product","user","setUser","useFileHandler","imageCollection","fname","setFName","tree","_id","image","image2","imgpath","date","setFile","editUser","preventDefault","formData","FormData","append","collection","index","config","headers","console","log","axios","res","data","status","window","location","href","myFile","postImage1","setPostImage1","image1","setImage1","setimgfile1","test1","base64","URL","createObjectURL","__v","postImage","setPostImage","setimgfile","test","to","Button","variant","Form","controlId","defaultValue","onChange","placeholder","onClick","htmlFor","hidden","multiple","length","map","title"],"sourceRoot":""}